Create a separate Shift Scheduler page and menu item, moving all schedule functionality out of Staff Management. Keep the scheduler features identical to what we already built (Date Range → Working Days, inclusive end date, max 15 days, Yes/No toggles, Select All/Clear All, summaries, Save/Reset, JSON hidden field + schedule:change/schedule:save events). Make the UI professional and consistent with the current design.

Scope & Structure

Keep my existing Staff Management page focused on staff CRUD only.

Create a new page for Shift Scheduler with the same scheduler functionality we have now.

Both pages share the same top navigation, styles, and branding.

Files

index.html → Staff Management (staff CRUD only; remove scheduler UI from here).

shift-scheduler.html → Shift Scheduler (the moved scheduler UI).

styles.css → shared styles (keep existing tokens).

app.staff.js → JS for Staff page (staff CRUD only).

app.scheduler.js → JS for Shift Scheduler page (date range & working days logic that we already had).

If a backend exists:

server.js (Node/Express): ensure static serving and route for /shift-scheduler.html.

Keep existing schedule APIs unchanged (e.g., /api/schedules); the new page will call them.

Navigation (consistent on both pages)

Add/update a top nav with these items:

Staff Management → links to index.html (or /)

Shift Scheduler → links to shift-scheduler.html

(Optional) History (leave as-is if present)

Apply an .active class to the current menu item.

Ensure keyboard accessibility and proper focus states.

Move/Detach Responsibilities

Remove all scheduler UI/JS from Staff Management:

Delete the Date Range + Working Days block from index.html.

Remove scheduler-specific code from staff JS.

Add the scheduler UI only in shift-scheduler.html:

Heading: Date Range

Inputs: From Date, To Date (inclusive end date)

Working Days (N-Day Schedule) list with Yes/No segmented pill per date

Toolbar: Select All, Clear All, badge Working: X / N

Summaries: Encoded Days, 15-Days Scheduled, Working Days, Display Order

Buttons: Save, Reset

Hidden field #workingDaysJson and events:

document.dispatchEvent(new CustomEvent('schedule:change', { detail: payload }));

document.dispatchEvent(new CustomEvent('schedule:save', { detail: payload }));

Behavior & Rules (must match current scheduler)

Inclusive end date; max 15 days total.

Default all days to Yes; toggles update counts and summaries live.

Encoded Days is 7-char Mon→Sun, 1 if any date for that weekday is Yes.

Save is disabled if the range is invalid (empty dates, From > To, or >15 days).

Keep calendar icon, rounded inputs, and dd-mm-yyyy placeholder overlay to match DOB/DOJ style.

Data & Integration

If backend exists:

Continue using the existing schedule endpoints (POST/PUT/DELETE/GET /api/schedules etc.).

On Save, call the API exactly as before and show a toast/snackbar on success/failure.

If no backend:

Keep localStorage behavior (same key and payload) so the page works standalone.

Polishing & Accessibility

Match the card, spacing, borders, and focus styles of the current app.

Ensure labels are bound to inputs, buttons have aria-labels where needed, and the active menu item is obvious.

On page load, focus the main card title for screen-reader context.

Cleanup & Safety

Remove dead scheduler code from index.html and app.staff.js.

Keep only the staff CRUD on the Staff page.

Avoid duplication: scheduler logic should live only in app.scheduler.js.

Acceptance Criteria

Staff Management (index.html) shows only staff CRUD. No scheduler UI present.

Shift Scheduler (shift-scheduler.html) shows the full scheduler UI and works exactly as before.

Nav item Shift Scheduler opens the new page and is highlighted active; Staff Management returns to the staff page and is active there.

Inclusive end date and 15-day cap enforced; Save disabled on invalid ranges.

Yes/No toggles, Select All/Clear All, summaries, Encoded Days, and Save/Reset all work.

If API exists, saving schedules hits the same endpoints and succeeds; otherwise localStorage persists.

No console errors on either page.

Deliverables

Updated index.html (staff only), new shift-scheduler.html (scheduler only).

styles.css (shared), app.staff.js, app.scheduler.js.

Menu works between pages with proper active state.

Removal of old scheduler code from staff page without breaking anything.

If anything in my project structure differs, adapt file paths and links accordingly, but keep the separation (staff vs. scheduler) and the full scheduler functionality intact.