Add a third action button Assign in each package row of Package Management → Prepaid Packages (and reuse for other tabs later). Clicking it should open the existing Assign Package modal with that template pre-selected and fields prefilled.

1) UI – add the button next to View/Edit

In the row actions cell, add a compact primary button:

<button
  type="button"
  class="btn btn-primary btn-sm"
  title="Assign to customer"
  data-action="assign"
  data-template-id="{{ pkg.id }}"
  data-package-type="prepaid"
>
  <i class="fas fa-user-plus"></i>
</button>


Keep existing View and Edit buttons unchanged. Ensure spacing matches (btn-group or gap-2).

2) JS – click handler + prefill

In static/js/packages.js:

Use event delegation so it works for all rows:

document.addEventListener('click', (e) => {
  const btn = e.target.closest('[data-action="assign"]');
  if (!btn) return;
  PackagesUI.assignFromTemplate(btn.dataset.templateId, btn.dataset.packageType || 'prepaid');
});


Implement PackagesUI.assignFromTemplate(id, type):

Behavior:

Open the Assign Package modal (non-dismissable except Save/Close).

Set Package Type dropdown to type (prepaid for now) and show the corresponding pane.

Fetch template details if needed:

GET /packages/api/templates/${id} (or use dataset already present in the row if available).

Prefill modal fields from template:

Hidden package_id = id

Name, description (read-only preview ok)

For prepaid: set Pay Amount, Get Value, Benefit %, Validity, and default Price Paid to template pay amount (editable).

Clear customer field and focus it.

Validation: keep existing rules; Save disabled until Customer selected.

On Save, POST to /packages/api/assign with body:

{
  "customer_id": <int>,
  "package_id": <id>,
  "price_paid": <decimal>,
  "discount": <decimal|null>,
  "expires_on": "YYYY-MM-DD|null",
  "notes": "..."
}


Success → toast: ✅ "<template_name>" assigned to <customer>.
Refresh the “All Assigned Packages” table; keep user on the same tab.

Expose the function:

window.PackagesUI = window.PackagesUI || {};
window.PackagesUI.assignFromTemplate = assignFromTemplate;

3) UX polish

Add tooltips to all action buttons (data-bs-toggle="tooltip").

Keep button order: View | Edit | Assign | Delete.

Keyboard: button focusable; Enter triggers assign.

4) QA

Click Assign on a prepaid row → modal opens with that package prefilled; customer empty & focused.

Select customer → Save enabled → assign succeeds → success toast → assignments list updates.

No console errors; network returns 2xx.

Acceptance: The new Assign button appears beside View/Edit, opens the prefilled Assign modal, and completes the assignment flow cleanly for prepaid packages.