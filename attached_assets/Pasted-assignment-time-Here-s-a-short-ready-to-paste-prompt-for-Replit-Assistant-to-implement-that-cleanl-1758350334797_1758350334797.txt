assignment time. Here’s a short, ready-to-paste prompt for Replit Assistant to implement that cleanly (UI + API + DB-safe).

Prompt for Replit Assistant (paste below):

Remove the Service dropdown from Add Service Package (template creation). Service will be selected when assigning to a customer.

1) UI changes – Add Service Package modal

Delete/Hide the “Select Service” field entirely.

Add a hidden flag in the form: choose_on_assign = true.

Keep fields: Package Name, Pay For, Free Services, Total Services (auto), Benefit %, Validity (months).

Auto-calc total = pay_for + free and benefit_percent = (free / pay_for) * 100 live.

Save button enabled only when: name + pay_for >=1 + free >=0 + validity >=0.

2) Template model/API

In PackageTemplate:

Make service_id nullable.

Add boolean choose_on_assign (default True).

Create/update endpoint (/packages/api/templates):

If choose_on_assign == true, do not accept service_id.

If choose_on_assign == false (legacy support), require service_id.

List view badges:

Show “Service: Choose at assignment” when choose_on_assign is true.

3) Assign flow updates

In Assign modal (for Service Packages):

If the selected template has choose_on_assign == true, show a Service dropdown here (load from /api/services).

Require service_id on assign.

Create one customer_package_item with that service_id, { total_qty = pay_for + free, used_qty=0 }.

POST /packages/api/assign body must support:

{
  "customer_id": 123,
  "package_id": 45,
  "service_id": 7,          // REQUIRED when template.choose_on_assign = true
  "price_paid": 0,          // optional if service packages are count-only
  "expires_on": "YYYY-MM-DD",
  "notes": ""
}


Server validation:

If template.choose_on_assign → service_id required and must exist.

If template has fixed service → ignore incoming service_id and use template’s.

4) Backward compatibility

Existing templates with a fixed service_id should save as choose_on_assign = false.

Mixed list support (some fixed-service, some choose-on-assign).

5) UX/Copy

Assign modal hint: “Select the service this package will cover.”

Success toast: ✅ “<Package Name>” assigned for <Service Name> to <Customer>.

Keep modals non-dismissable except Close/Save.

6) QA (must pass)

Create a Service Package without service selection (no dropdown).

Click Assign on that template → service dropdown appears, required.

Complete assignment → package item created with the chosen service; remaining updates correctly.

Existing fixed-service templates still assign without service dropdown.

No console errors; all API calls return 2xx/validation errors only.