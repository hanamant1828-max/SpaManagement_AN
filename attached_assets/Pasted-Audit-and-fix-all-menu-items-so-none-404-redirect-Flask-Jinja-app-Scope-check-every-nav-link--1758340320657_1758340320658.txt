Audit and fix all menu items so none 404/redirect; Flask + Jinja app.

Scope (check every nav link):

Dashboard, Staff Management, Customer Management, Shift Scheduler, Staff Booking, Inventory → Product Master, Categories, Locations, Adjustments, Consumption, Transfers, Batches, Status Overview, Reports, Location Management (and any others in base.html).

Do:

Route ↔ Template parity

For each menu item, ensure a Flask route exists and a template exists in templates/ (create minimal placeholder if missing).

Example (no blueprints):

@app.route("/<slug>")  # e.g., "/staff"
def page(slug): ...


Prefer explicit functions per page (e.g., staff(), customers(), shift_scheduler()).

If using blueprints, confirm register_blueprint and url_prefix match menu paths.

Use url_for everywhere

Replace hard-coded href="/something" with href="{{ url_for('endpoint_name') }}" (or url_for('bp.endpoint')).

Verify active state works on deep links.

Static assets

Each page loads its CSS/JS via url_for('static', filename='...'). No 404 on assets.

API stubs (avoid 404s in UI)

If a page calls APIs that don’t exist yet (e.g., /api/shifts, /api/schedule, /api/products), add temporary handlers returning 200 {success:true, data:[]}.

Dev auth bypass

In dev, skip auth/CSRF for these page routes and their API prefixes to avoid login redirects while testing.

404 & redirect traps

Fix trailing slash mismatches (add both /route and /route/ or set strict_slashes=False).

Ensure blueprint url_prefix doesn’t double-prefix links.

Confirm base.html nav points to the exact endpoint names.

Quick smoke pass

Click every menu item → loads 200; refresh on that URL → still 200; console clean.

Deep link to each page directly in the address bar → renders with layout.

Acceptance:

No 404s/redirects for any menu item.

All pages render from nav and direct URL.

Assets load (no 404 in Network tab).

Any called APIs respond 200 (or meaningful 4xx/5xx with user-friendly message), and there are no console errors.