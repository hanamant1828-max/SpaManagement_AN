Implement minimal Assign flow on /packages for these tabs only:

Memberships (#tblMemberships)

Student Offers (#tblStudentOffers)

Yearly Memberships (#tblYearlyMemberships)

Kitty Parties (#tblKittyPackages)

Do NOT modify the Service Packages tab (already done) and do NOT change the Prepaid flow.

1) Add Assign button (Actions column) per tab

Insert this button in each row of the four tables above:

<button class="btn btn-primary btn-sm"
        title="Assign to customer"
        data-action="assign-simple"
        data-template-id="{{ pkg.id }}"
        data-package-type="{{ tab_type }}"> <!-- membership|student|yearly|kitty -->
  <i class="fas fa-user-plus"></i>
</button>


Set tab_type appropriately per tab.

2) Minimal Assign modal (single customer picker)

In templates/packages/customer_packages.html, include once at the bottom:

#assignSimpleModal (backdrop=static, keyboard=false)
  - #asTemplateName (readonly label)
  - #asCustomer (select/search)
  - hidden: #asTemplateId, #asPackageType, #asPricePaid
  - Primary button: #asSave (disabled until a customer is selected)

3) JS wiring (in static/js/packages.js)

Use event delegation to open the modal:

Click on [data-action="assign-simple"] → PackagesUI.openAssignSimple(templateId, packageType)

Implement:

openAssignSimple(templateId, packageType):

GET /packages/api/templates/<id> → fill #asTemplateName; set hidden fields; set #asPricePaid to template price (or 0).

Load customers into #asCustomer (via GET /packages/api/customers), enable #asSave when chosen.

Show modal (non-dismissable except buttons).

saveAssignSimple():

POST /packages/api/assign with:

{
  "package_type": "<membership|student|yearly|kitty>",
  "package_id": <templateId>,
  "customer_id": <id>,
  "price_paid": <number>
}


On success: toast success, close modal, refresh the current tab’s table.

Expose:

window.PackagesUI.openAssignSimple = openAssignSimple;
window.PackagesUI.saveAssignSimple  = saveAssignSimple;

4) Backend expectations

/packages/api/assign must accept the minimal payload above for membership|student|yearly|kitty.

Use template defaults (price/validity/etc.) server-side; only customer_id, package_id, price_paid come from UI.

5) QA (tabs you must verify)

Memberships: row → Assign → pick customer → Assign → success toast, table refreshes.

Student Offers: same.

Yearly Memberships: same.

Kitty Parties: same.

No changes to Service Packages or Prepaid; no console errors.