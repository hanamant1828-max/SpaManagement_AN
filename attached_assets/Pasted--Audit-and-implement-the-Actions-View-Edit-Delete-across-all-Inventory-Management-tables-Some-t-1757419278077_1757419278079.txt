“Audit and implement the Actions (View, Edit, Delete) across all Inventory Management tables.
Some tables currently show a placeholder like ‘implemented in future’. Check replit.md for any TODOs and complete them. If entries are missing in replit.md, add a section documenting these changes.

Scope (all must support View, Edit, Delete via Bootstrap modals; no page navigation):

Product Master

Category Management

Add Inventory Items (Adjustments)

Consumption

What to do

Buttons & Visibility

Ensure Actions column shows three buttons: View (eye), Edit (pencil), Delete (trash).

Remove any placeholder text like ‘implemented in future’.

View Modal (read-only)

Open on eye click; show all key fields with labels. Close button only.

Edit Modal

Pre-fill fields from the row’s record.

Inline validation and disabled Save until valid.

On Save, update storage/API and refresh the table live.

Delete Flow

Show confirmation modal with record name/ID.

On confirm, delete and refresh table.

Stock logic:

Adjustments: deleting must reverse stock and log a movement “Adjustment Deleted – Stock Reversed”.

Consumption: deleting must restore stock and log a movement “Consumption Deleted – Stock Restored”.

Product/Category: prevent deletion if referenced; show a friendly error.

Data Layer

Use existing storage keys (e.g., inventory.products, inventory.categories, inventory.adjustments, inventory.consumptions).

Add defensive defaults (no crashes on missing fields).

UX

Success/error toasts after each action.

No full page reloads.

replit.md

Add/Update a Changelog section describing the implemented Actions per module.

Document any new helpers (e.g., stock rollback functions) and event flow.

Acceptance Criteria

All four tables display working View / Edit / Delete buttons.

Modals open with correct data; saves and deletes update rows instantly.

Stock is correctly reversed/restored for Adjustments and Consumption deletes, with movement entries created.

No ‘implemented in future’ placeholders remain.

replit.md updated accordingly.”**